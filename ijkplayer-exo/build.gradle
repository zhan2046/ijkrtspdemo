apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    packagingOptions {
        pickFirst 'lib/armv7a/libijkplayer.so'
        pickFirst 'lib/armv7a/libijksdl.so'
        pickFirst 'lib/armv7a/libijkwdzffmpeg.so'
        pickFirst 'lib/arm64-v8a/libijkplayer.so'
        pickFirst 'lib/arm64-v8a/libijksdl.so'
        pickFirst 'lib/arm64-v8a/libijkwdzffmpeg.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdk rootProject.ext.compileSdkVersion
    //noinspection GroovyAssignabilityCheck

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api 'com.google.android.exoplayer:exoplayer:2.15.1'
    implementation project(':ijkplayer-java')
//    implementation project(':extension-ffmpeg-release')
    implementation 'androidx.media2:media2-exoplayer:1.0.3'
    // compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
}

gradle.startParameter.taskNames.each { task ->
    def subProjectName = task;
    if (task.startsWith(':'))
        subProjectName = task.split(":")[1]
    if (subProjectName.equals(project.name))
        apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");
}
